version: '3.8'

services:
  # Backend API (优化内存使用)
  backend:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: kss-backend-free
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DB_PATH=/app/database/kss_rating.db
    env_file:
      - .env.production
    volumes:
      - db_data:/app/database
      - ./logs:/app/logs
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.7'
        reservations:
          memory: 256M
          cpus: '0.3'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend (轻量化配置)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: kss-frontend-free
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.3'
        reservations:
          memory: 128M
          cpus: '0.1'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # 不包含PostgreSQL - 使用SQLite节省内存
  # 不包含Redis - 简化架构
  # 不包含Nginx代理 - 直接使用前端Nginx

volumes:
  db_data:
    driver: local

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 